# **IMPORTANT**: Do not modify this file! Instead make your changes in
# MAST_HOME/etc/local/server.conf
#
# server.conf
#
# NOTE: Stanza headers are case-sensitive, option names are case-insensitive,
# and option values are case-sensitive
#
# This file is used to configure the MAST Web GUI server. There are a limited
# number of configuration options available, and I will list them below, but
# first, a note on the server used to host the MAST Web GUI.
#
# CherryPy is used to hsot the Web GUI. CherryPy is a fast,
# standards-compliant, production-ready server written in Python.
# It is included in the distribution of MAST by default and is configured
# to serve the Web GUI over ssl (https), but You should definately change
# the key pair used, because they are also included in the distribution of
# MAST and therefore not secret.
#
# There are four stanzas each with their own options which can be defined
# in this file.
#
# [dirs]
#
# This is used to define various directories which MAST gui will look for.
# If you specify a relative path they will be relative to MAST_HOME, if
# you specify an absolute path it will be an absolute path.
#
# The following options are available in the "dirs" stanza:
#     static - This is where static files will be stored including the
#              css and js files needed by MAST Web, as well as downloads
#              which are accumulated through the use of MAST Web.
#
#     template - This is the directory used for storing the templates used by
#                MAST Web.
#
#     plugins - This is the directory where the plugins for MAST Web are stored
#               Everything is a plugin in MAST Web, so it comes with a bunch of
#               pre-defined plugins, but you can add your own plugins as well.
#               please see README.md for details on how to create your own
#               plugins.
#
#     upload - This is the directory where uploaded files will be stored.
#              in fact, a sub-directory will be created under this directory
#              and that sub-directory will be used.
#
# [paths]
#
# This is used to specify URI components which will be used by MAST Web to
# route certain requests. Currently there is only one option here, and that is
# static, which is the URI from which to retrieve static files such as js, css
# and downloads.
#
# [logging]
#
# This is used to configure logging for MAST Web. there are two options to
# specify here:
#
#    file - the file to log web activity (This is very similar to httpd's
#           access.log)
#
#    level - an integer representing the logging level. The lower the number
#            the more verbose the logging will be
#
# [server]
#
# This is used to specify the options for running the server. The following
# options can be specified:
#
#    debug - Whether to run in debug mode
#
#    port - The port to listen on
#
#    host - the host to listen to (127.0.0.1 means to only listen to localhost,
#           while 0.0.0.0 means to listen to all incoming requests, if you
#           specify a specific ip address then only requests coming from that
#           ip will be recieved)
#
#    threaded - Whether to spawn a new thread for each new request
#
#    secure - Whether to use ssl (https)
#
#    key - The private key to use for the ssl (https)
#
#    cert - The public cert to use for the ssl (https)

[dirs]
static = var/www/static/
template = var/www/templates
plugins = var/www/plugins
upload = tmp

[paths]
static = /static

[logging]
file = var/log/flask.log
level = 10

[server]
debug = false
port = 5000
host = 127.0.0.1
threaded = true
max_file_upload_size = 536870912
secure = true
key = etc/crypto/private/mast.key
cert = etc/crypto/cert/mast.crt

# -*- coding: utf-8 -*-
"""
merge_logger_info.py

This  is a very specialized script. It takes two excel workbooks which
should contain exacly one worksheet each. This worksheet should contain
the LogTarget configuration in the one and LogTargetStatus. You can generate
these workbooks with the following commands:

$ ./mast usrbin/getconfig.py -a $HOSTNAMES -c $CREDENTIALS -d all-domains -o LogTarget
$ ./mast usrbin/getstatus.py -a $HOSTNAMES -c $CREDENTIALS -d all-domains -p LogTargetStatus

Once those commands are run you should have two files and you can use this
script to perform the equivalent of a LEFT JOIN on the two worksheets
thereby generating an excel workbook with one worksheet containing the
combined output from the two previous commands.
"""
import sys
import argparse
import pandas as pd


def parse_args(argv):
    parser = argparse.ArgumentParser(
        description=__doc__,
        formatter_class=argparse.RawDescriptionHelpFormatter)
    parser.add_argument(
        "config",
        help="The path and filename of a workbook generated by getconfig")
    parser.add_argument(
        "status",
        help="The path and filename of a workbook generated by getstatus")
    parser.add_argument(
        "out_file",
        help="The file to output to (will be over-written if it exists)")
    return parser.parse_args(argv)


def main(argv=None):
    argv = sys.argv[1:] if argv is None else argv
    args = parse_args(argv)
    config = pd.read_excel(args.config)
    status = pd.read_excel(args.status)
    status.rename(
        columns={"hostname": "appliance", "LogTarget": "Object Name"},
        inplace=True
    )
    new = pd.merge(status, config, on=["appliance", "domain", "Object Name"])
    new.to_excel(args.out_file)


if __name__ == "__main__":
    main()
